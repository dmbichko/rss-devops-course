name: Terraform Deployment

on:
  pull_request:
  push:
    branches:
      - task_1

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  TERRAFORM_VERSION: 1.9.6
  AWS_REGION: us-east-1
  GITHUB_ACTIONS_ROLE_NAME: GithubActionsRole

permissions:
  id-token: write
  contents: read

jobs:

  terraform-init:
    name: Terraform Init
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
  
      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.GITHUB_ACTIONS_ROLE_NAME }} 
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }} 
      
      - name: Terraform Init
        run: terraform init

      - name: Cache Terraform modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform
            .terraform.lock.hcl        
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

  terraform-fmt:
    name: Terraform Format 
    runs-on: ubuntu-latest
    needs: terraform-init

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Terraform Format 
        run: terraform fmt

  plane:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-fmt
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Restore Terraform cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform
            .terraform.lock.hcl     
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform- 

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.GITHUB_ACTIONS_ROLE_NAME }}  
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform init
        run: terraform init
          

      - name: Terraform Plan
        run: terraform plan -input=false
